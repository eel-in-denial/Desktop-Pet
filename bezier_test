import tkinter as tk
import random
import math

pi = math.pi

class Path():
    def __init__(self):
        self.points = [[random.randrange(0, width), random.randrange(0, height)], [random.randrange(0, width), random.randrange(0, height)], [random.randrange(0, width), random.randrange(0, height)]]
        self.direction = [[50, 50], [50, 50], [50, 50]]
        self.tweenpoints = [[self.points[0][0]+self.direction[0][0]*2, self.points[0][1]+self.direction[0][1]*2], [self.points[1][0]+self.direction[1][0]*2, self.points[1][1]+self.direction[1][1]*2], [self.points[2][0]+self.direction[2][0]*2, self.points[2][1]+self.direction[2][1]*2]]
        self.possible_direction = [[-pi, pi], [-pi, pi], [-pi, pi]]
        self.points_canvas = []
        self.bezier_canvas = []
        drawing_points = [self.points[0][0]-10, self.points[0][1]-10, self.points[0][0]+10, self.points[0][1]+10]
        circle = canvas.create_oval(drawing_points, outline='red', width=2, fill="red")
        self.points_canvas.append(circle)
        drawing_points = [self.points[1][0]-10, self.points[1][1]-10, self.points[1][0]+10, self.points[1][1]+10]
        circle = canvas.create_oval(drawing_points, outline='green', width=2, fill="green")
        self.points_canvas.append(circle)
        drawing_points = [self.points[2][0]-10, self.points[2][1]-10, self.points[2][0]+10, self.points[2][1]+10]
        circle = canvas.create_oval(drawing_points, outline='blue', width=2, fill="blue")
        self.points_canvas.append(circle)
        for i in range(101):
            t = i/100
            p1 = (1-t)**3
            p2 = 3*t*(1-t)**2
            p3 = 3*(t**2)*(1-t)
            p4 = t**3
            point = [self.points[0][0]*p1 + self.tweenpoints[0][0]*p2 + self.tweenpoints[1][0]*p3 + self.points[1][0]*p4, self.points[0][1]*p1 + self.tweenpoints[0][1]*p2 + self.tweenpoints[1][1]*p3 + self.points[1][1]*p4]
            drawing_points = [point[0]-2, point[1]-2, point[0]+2, point[1]+2,]
            circle = canvas.create_oval(drawing_points, outline='white', width=2, fill="white")
            self.bezier_canvas.append(circle)


    def randomize(self):
        for i in range(3):
            canvas.moveto(self.points_canvas[i], random.randrange(0, width), random.randrange(0, height))
            print(random.randrange(0, width))
        

def check_key(event): # check what key was pressed
    if event.keysym == "p":
        window.destroy() # close program

# creating window / fullscreen / top overlay
window = tk.Tk()
window.attributes('-fullscreen', True)
window.attributes('-topmost', True)
# set height and width variables
height = window.winfo_screenheight()
width = window.winfo_screenwidth()


#set up black canvas
canvas = tk.Canvas(window, bg='black', highlightthickness=0)
canvas.pack(fill=tk.BOTH, expand=True)
window.bind("<KeyPress>", check_key)
path = Path()
button = tk.Button(window, height=2, width=20, bg="yellow", command=path.randomize, text="randomize")
button.place(x=1300, y=800)
window.mainloop() # checks events
